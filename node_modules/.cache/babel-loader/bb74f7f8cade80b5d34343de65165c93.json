{"ast":null,"code":"var _jsxFileName = \"/home/ioannis/git/react-360-integration/src/components/Room.tsx\";\nimport React, { useEffect, useRef, useState } from \"react\";\nimport { Container, makeStyles, Fab, Slide, Chip } from \"@material-ui/core\";\nimport { CallEnd, Mic, MicOff, Share, Face } from \"@material-ui/icons\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"../common/constants\";\nimport { NameDialog } from \"./NameDialog\";\nimport { ShareDialog } from \"./ShareDialog\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\"\n  },\n  video: {\n    margin: theme.spacing(2),\n    [theme.breakpoints.up(\"md\")]: {\n      width: `calc(40% - 2*${theme.spacing(2)}px)`\n    },\n    position: \"relative\"\n  },\n  username: {\n    position: \"absolute\",\n    bottom: \"8px\",\n    right: \"4px\"\n  },\n  videoContainer: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    width: \"100%\"\n  },\n  buttonContainer: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  sliderContainer: {\n    position: \"absolute\",\n    bottom: \"0px\",\n    width: \"100%\",\n    height: \"100px\"\n  },\n  callButton: {\n    color: \"red\",\n    margin: theme.spacing(1)\n  },\n  micButton: {\n    color: isMicOn => isMicOn ? theme.palette.secondary.main : \"red\",\n    margin: theme.spacing(1)\n  },\n  shareButton: {\n    color: theme.palette.secondary.main,\n    margin: theme.spacing(1)\n  }\n}));\n\nconst Room = props => {\n  const {\n    username,\n    setUsername\n  } = props;\n  const [isMicOn, setIsMicOn] = useState(true);\n  const classes = useStyles(isMicOn);\n  const location = useLocation();\n  const history = useHistory();\n  const userVideo = useRef(null);\n  const socketRef = useRef();\n  const peersRef = useRef([]);\n  const [peers, setPeers] = useState([]);\n  const [nameDialogOpen, setNameDialogOpen] = useState(false);\n  const [shareDialogOpen, setShareDialogOpen] = useState(false);\n  const [showButtons, setShowButtons] = useState(false);\n  useEffect(() => {\n    if (!username) {\n      openNameDialog();\n    }\n  }, [username]);\n  useEffect(() => {\n    socketRef.current = io.connect(\"https://ioannis-uvid.herokuapp.com/\");\n  }, []);\n\n  const isMobileDevice = () => {\n    return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n  };\n\n  useEffect(() => {\n    const vidOpts = isMobileDevice() ? {\n      facingMode: \"user\"\n    } : true;\n\n    if (username) {\n      navigator.mediaDevices.getUserMedia({\n        video: vidOpts,\n        audio: true\n      }).then(stream => {\n        if (userVideo.current) userVideo.current.srcObject = stream;\n\n        if (socketRef.current) {\n          socketRef.current.emit(\"join room\", getRoomID(), username);\n          socketRef.current.on(\"all users\", users => {\n            const peersToAdd = [];\n            users.forEach(user => {\n              if (socketRef.current) {\n                const peer = createPeer(user.id, socketRef.current.id, username, stream);\n                peersRef.current.push({\n                  peerID: user.id,\n                  peer\n                });\n                peersToAdd.push({\n                  peer: peer,\n                  username: user.username\n                });\n              }\n            });\n            setPeers(peersToAdd);\n          });\n          socketRef.current.on(\"user joined\", payload => {\n            const alreadyExist = peersRef.current.find(p => p.peerID === payload.callerID);\n\n            if (!alreadyExist) {\n              const peer = addPeer(payload.signal, payload.callerID, stream);\n              peersRef.current.push({\n                peerID: payload.callerID,\n                peer\n              });\n              setPeers(users => [...users, {\n                peer: peer,\n                username: payload.username\n              }]);\n            }\n          });\n          socketRef.current.on(\"receiving returned signal\", payload => {\n            const item = peersRef.current.find(p => p.peerID === payload.id);\n            if (item) item.peer.signal(payload.signal);\n          });\n        }\n      });\n    }\n  }, [username]);\n\n  const getRoomID = () => {\n    return location.pathname.split(\"room/\")[1];\n  };\n\n  const createPeer = (userToSignal, callerID, callerUsername, stream) => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream,\n      config: {\n        iceServers: [{\n          urls: \"stun:stun.l.google.com:19302\"\n        }, {\n          urls: \"stun:global.stun.twilio.com:3478?transport=udp\"\n        }]\n      }\n    });\n    peer.on(\"signal\", signal => {\n      if (socketRef.current) socketRef.current.emit(\"sending signal\", {\n        userToSignal,\n        callerID,\n        callerUsername,\n        signal\n      });\n    });\n    return peer;\n  };\n\n  const addPeer = (incomingSignal, callerID, stream) => {\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream,\n      config: {\n        iceServers: [{\n          urls: \"stun:stun.l.google.com:19302\"\n        }, {\n          urls: \"stun:global.stun.twilio.com:3478?transport=udp\"\n        }]\n      }\n    });\n    peer.on(\"signal\", signal => {\n      if (socketRef.current) socketRef.current.emit(\"returning signal\", {\n        signal,\n        callerID\n      });\n    });\n    peer.signal(incomingSignal);\n    return peer;\n  };\n\n  const handleLeaveRoom = () => {\n    if (socketRef.current) socketRef.current.disconnect();\n    peers.forEach(p => p.peer.destroy());\n    history.push(ROUTES.HOME);\n  };\n\n  const openNameDialog = () => {\n    setNameDialogOpen(true);\n  };\n\n  const closeNameDialog = () => {\n    setNameDialogOpen(false);\n  };\n\n  const openShareDialog = () => {\n    setShareDialogOpen(true);\n  };\n\n  const closeShareDialog = () => {\n    setShareDialogOpen(false);\n  };\n\n  const handleToggleMic = () => {\n    if (userVideo.current) {\n      let stream = userVideo.current.srcObject;\n      stream.getAudioTracks()[0].enabled = !isMicOn;\n      userVideo.current.srcObject = stream;\n    }\n\n    setIsMicOn(!isMicOn);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    className: classes.root,\n    onMouseEnter: () => setShowButtons(true),\n    onMouseLeave: () => setShowButtons(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.videoContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.video,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    icon: /*#__PURE__*/React.createElement(Face, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 33\n      }\n    }),\n    label: username,\n    size: \"small\",\n    className: classes.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"video\", {\n    muted: true,\n    ref: userVideo,\n    autoPlay: true,\n    playsInline: true,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 21\n    }\n  })), peers.map((p, index) => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.video,\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Chip, {\n    icon: /*#__PURE__*/React.createElement(Face, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 37\n      }\n    }),\n    label: p.username,\n    size: \"small\",\n    className: classes.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(RemoteVideo, {\n    peer: p.peer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.sliderContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Slide, {\n    direction: \"up\",\n    timeout: 1000,\n    in: showButtons,\n    mountOnEnter: true,\n    unmountOnExit: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Fab, {\n    className: classes.micButton,\n    onClick: handleToggleMic,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 25\n    }\n  }, isMicOn ? /*#__PURE__*/React.createElement(Mic, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 40\n    }\n  }) : /*#__PURE__*/React.createElement(MicOff, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 50\n    }\n  })), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.callButton,\n    onClick: handleLeaveRoom,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(CallEnd, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(Fab, {\n    className: classes.shareButton,\n    onClick: openShareDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Share, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 29\n    }\n  }))))), /*#__PURE__*/React.createElement(ShareDialog, {\n    open: shareDialogOpen,\n    close: closeShareDialog,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(NameDialog, {\n    open: nameDialogOpen,\n    close: closeNameDialog,\n    setUsername: setUsername,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 13\n    }\n  }));\n};\n\nconst RemoteVideo = props => {\n  const {\n    peer\n  } = props;\n  const ref = useRef(null);\n  useEffect(() => {\n    peer.on(\"stream\", stream => {\n      if (ref.current) ref.current.srcObject = stream;\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(\"video\", {\n    playsInline: true,\n    autoPlay: true,\n    ref: ref,\n    style: {\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 12\n    }\n  });\n};\n\nexport default Room;","map":{"version":3,"sources":["/home/ioannis/git/react-360-integration/src/components/Room.tsx"],"names":["React","useEffect","useRef","useState","Container","makeStyles","Fab","Slide","Chip","CallEnd","Mic","MicOff","Share","Face","Peer","io","useHistory","useLocation","ROUTES","NameDialog","ShareDialog","useStyles","theme","root","display","flexWrap","justifyContent","alignItems","height","video","margin","spacing","breakpoints","up","width","position","username","bottom","right","videoContainer","buttonContainer","sliderContainer","callButton","color","micButton","isMicOn","palette","secondary","main","shareButton","Room","props","setUsername","setIsMicOn","classes","location","history","userVideo","socketRef","peersRef","peers","setPeers","nameDialogOpen","setNameDialogOpen","shareDialogOpen","setShareDialogOpen","showButtons","setShowButtons","openNameDialog","current","connect","isMobileDevice","test","navigator","userAgent","vidOpts","facingMode","mediaDevices","getUserMedia","audio","then","stream","srcObject","emit","getRoomID","on","users","peersToAdd","forEach","user","peer","createPeer","id","push","peerID","payload","alreadyExist","find","p","callerID","addPeer","signal","item","pathname","split","userToSignal","callerUsername","initiator","trickle","config","iceServers","urls","incomingSignal","handleLeaveRoom","disconnect","destroy","HOME","closeNameDialog","openShareDialog","closeShareDialog","handleToggleMic","getAudioTracks","enabled","map","index","RemoteVideo","ref"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from \"react\";\nimport { Container, Typography, makeStyles, Fab, Slide, Chip } from \"@material-ui/core\";\nimport { CallEnd, Mic, MicOff, Share, Face } from \"@material-ui/icons\";\nimport Peer from \"simple-peer\";\nimport io from \"socket.io-client\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport { ROUTES } from \"../common/constants\";\nimport User from \"./Models/user\";\nimport { NameDialog } from \"./NameDialog\";\nimport { ShareDialog } from \"./ShareDialog\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        height: \"100%\",\n    },\n    video: {\n        margin: theme.spacing(2),\n        [theme.breakpoints.up(\"md\")]: {\n            width: `calc(40% - 2*${theme.spacing(2)}px)`,\n        },\n        position: \"relative\",\n    },\n    username: {\n        position: \"absolute\",\n        bottom: \"8px\",\n        right: \"4px\",\n    },\n    videoContainer: {\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        width: \"100%\",\n    },\n    buttonContainer: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    },\n    sliderContainer: {\n        position: \"absolute\",\n        bottom: \"0px\",\n        width: \"100%\",\n        height: \"100px\",\n    },\n    callButton: {\n        color: \"red\",\n        margin: theme.spacing(1),\n    },\n    micButton: {\n        color: (isMicOn) => (isMicOn ? theme.palette.secondary.main : \"red\"),\n        margin: theme.spacing(1),\n    },\n    shareButton: {\n        color: theme.palette.secondary.main,\n        margin: theme.spacing(1),\n    },\n}));\n\ninterface RoomProps {\n    username: string;\n    setUsername: (username: string) => void;\n}\n\ninterface PeersRef {\n    peerID: string;\n    peer: Peer.Instance;\n}\n\ninterface RemoteVideoProps {\n    peer: Peer.Instance;\n}\n\ninterface PeerAndUsername {\n    peer: Peer.Instance;\n    username: string;\n}\n\nconst Room: React.FC<RoomProps> = (props: RoomProps) => {\n    const { username, setUsername } = props;\n    const [isMicOn, setIsMicOn] = useState<boolean>(true);\n    const classes = useStyles(isMicOn);\n    const location = useLocation();\n    const history = useHistory();\n\n    const userVideo = useRef<HTMLVideoElement>(null);\n    const socketRef = useRef<SocketIOClient.Socket>();\n    const peersRef = useRef<PeersRef[]>([]);\n\n    const [peers, setPeers] = useState<PeerAndUsername[]>([]);\n    const [nameDialogOpen, setNameDialogOpen] = useState<boolean>(false);\n    const [shareDialogOpen, setShareDialogOpen] = useState<boolean>(false);\n    const [showButtons, setShowButtons] = useState<boolean>(false);\n\n    useEffect(() => {\n        if (!username) {\n            openNameDialog();\n        }\n    }, [username]);\n\n    useEffect(() => {\n        socketRef.current = io.connect(\"https://ioannis-uvid.herokuapp.com/\");\n    }, []);\n\n    const isMobileDevice = (): boolean => {\n        return /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent);\n    };\n\n    useEffect(() => {\n        const vidOpts = isMobileDevice() ? { facingMode: \"user\" } : true;\n        if (username) {\n            navigator.mediaDevices.getUserMedia({ video: vidOpts, audio: true }).then((stream: MediaStream) => {\n                if (userVideo.current) userVideo.current.srcObject = stream;\n                if (socketRef.current) {\n                    socketRef.current.emit(\"join room\", getRoomID(), username);\n\n                    socketRef.current.on(\"all users\", (users: User[]) => {\n                        const peersToAdd: PeerAndUsername[] = [];\n                        users.forEach((user) => {\n                            if (socketRef.current) {\n                                const peer: Peer.Instance = createPeer(user.id, socketRef.current.id, username, stream);\n                                peersRef.current.push({\n                                    peerID: user.id,\n                                    peer,\n                                });\n                                peersToAdd.push({ peer: peer, username: user.username });\n                            }\n                        });\n                        setPeers(peersToAdd);\n                    });\n\n                    socketRef.current.on(\"user joined\", (payload: any) => {\n                        const alreadyExist = peersRef.current.find((p) => p.peerID === payload.callerID);\n                        if (!alreadyExist) {\n                            const peer: Peer.Instance = addPeer(payload.signal, payload.callerID, stream);\n                            peersRef.current.push({\n                                peerID: payload.callerID,\n                                peer,\n                            });\n\n                            setPeers((users) => [...users, { peer: peer, username: payload.username }]);\n                        }\n                    });\n\n                    socketRef.current.on(\"receiving returned signal\", (payload: any) => {\n                        const item = peersRef.current.find((p) => p.peerID === payload.id);\n                        if (item) item.peer.signal(payload.signal);\n                    });\n                }\n            });\n        }\n    }, [username]);\n\n    const getRoomID = (): string => {\n        return location.pathname.split(\"room/\")[1];\n    };\n\n    const createPeer = (userToSignal: string, callerID: string, callerUsername: string, stream: MediaStream) => {\n        const peer: Peer.Instance = new Peer({\n            initiator: true,\n            trickle: false,\n            stream,\n            config: {\n                iceServers: [\n                    { urls: \"stun:stun.l.google.com:19302\" },\n                    { urls: \"stun:global.stun.twilio.com:3478?transport=udp\" },\n                ],\n            },\n        });\n\n        peer.on(\"signal\", (signal) => {\n            if (socketRef.current)\n                socketRef.current.emit(\"sending signal\", { userToSignal, callerID, callerUsername, signal });\n        });\n\n        return peer;\n    };\n\n    const addPeer = (incomingSignal: string, callerID: string, stream: MediaStream) => {\n        const peer: Peer.Instance = new Peer({\n            initiator: false,\n            trickle: false,\n            stream,\n            config: {\n                iceServers: [\n                    { urls: \"stun:stun.l.google.com:19302\" },\n                    { urls: \"stun:global.stun.twilio.com:3478?transport=udp\" },\n                ],\n            },\n        });\n\n        peer.on(\"signal\", (signal) => {\n            if (socketRef.current) socketRef.current.emit(\"returning signal\", { signal, callerID });\n        });\n\n        peer.signal(incomingSignal);\n\n        return peer;\n    };\n\n    const handleLeaveRoom = () => {\n        if (socketRef.current) socketRef.current.disconnect();\n        peers.forEach((p) => p.peer.destroy());\n        history.push(ROUTES.HOME);\n    };\n\n    const openNameDialog = () => {\n        setNameDialogOpen(true);\n    };\n\n    const closeNameDialog = () => {\n        setNameDialogOpen(false);\n    };\n\n    const openShareDialog = () => {\n        setShareDialogOpen(true);\n    };\n\n    const closeShareDialog = () => {\n        setShareDialogOpen(false);\n    };\n\n    const handleToggleMic = () => {\n        if (userVideo.current) {\n            let stream = userVideo.current.srcObject as MediaStream;\n            stream.getAudioTracks()[0].enabled = !isMicOn;\n            userVideo.current.srcObject = stream;\n        }\n        setIsMicOn(!isMicOn);\n    };\n\n    return (\n        <Container\n            className={classes.root}\n            onMouseEnter={() => setShowButtons(true)}\n            onMouseLeave={() => setShowButtons(false)}\n        >\n            <div className={classes.videoContainer}>\n                <div className={classes.video}>\n                    <Chip icon={<Face />} label={username} size=\"small\" className={classes.username} />\n                    <video muted ref={userVideo} autoPlay playsInline style={{ width: \"100%\" }} />\n                </div>\n                {peers.map((p, index) => (\n                    <div className={classes.video} key={index}>\n                        <Chip icon={<Face />} label={p.username} size=\"small\" className={classes.username} />\n                        <RemoteVideo peer={p.peer} />\n                    </div>\n                ))}\n            </div>\n\n            <div className={classes.sliderContainer}>\n                <Slide direction=\"up\" timeout={1000} in={showButtons} mountOnEnter unmountOnExit>\n                    <div className={classes.buttonContainer}>\n                        <Fab className={classes.micButton} onClick={handleToggleMic}>\n                            {isMicOn ? <Mic /> : <MicOff />}\n                        </Fab>\n                        <Fab className={classes.callButton} onClick={handleLeaveRoom}>\n                            <CallEnd />\n                        </Fab>\n                        <Fab className={classes.shareButton} onClick={openShareDialog}>\n                            <Share />\n                        </Fab>\n                    </div>\n                </Slide>\n            </div>\n            <ShareDialog open={shareDialogOpen} close={closeShareDialog} />\n            <NameDialog open={nameDialogOpen} close={closeNameDialog} setUsername={setUsername} />\n        </Container>\n    );\n};\n\nconst RemoteVideo = (props: RemoteVideoProps) => {\n    const { peer } = props;\n    const ref = useRef<HTMLVideoElement>(null);\n\n    useEffect(() => {\n        peer.on(\"stream\", (stream) => {\n            if (ref.current) ref.current.srcObject = stream;\n        });\n    }, []);\n\n    return <video playsInline autoPlay ref={ref} style={{ width: \"100%\" }} />;\n};\n\nexport default Room;\n"]},"metadata":{},"sourceType":"module"}